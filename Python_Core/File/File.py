with open('Python_Core\File\\text.txt', 'w') as file: # With гарантирует что файл будет закрыт как только мы выйдем с него \ as означает что мы вернем что-то в file
    file.write('Hello my name is Serhii'), 'Записываем в файл'

    file.seek(5), 'От куда начинаем выводить '
    lines = file.tell(), 'Поиск позиции курсора в этот моент в тексте '
    print(lines)

    read = file.read(), 'Выводим на екран текст'
    symbol = file.readline(), 'Читаем файл по строчно'
    symbol = file.readlines(), 'Читаем файл полностю и возвращаем список где 1 елемент это одна строка(\n Надо удаялять самостоятельно)'
    lines = [el.strip() for el in file.readlines()], 'Функция которая удаляет изсписка переноc\Пробелы на новую строку'
    
with open('Python_Core\File\\text.txt', 'r') as file:
    lines = [el.strip() for el in file.readlines()]
    print(lines)

'//////////////////////////////////////////////////////////////////////////       Bytes      ///////////////////////////////////////////////////////////////////////////////////////////////////////'
def bytes(): # Тут будут Bytes in the file
    with open('Python_Core\File\\raw_data.bin','wb'):
        file.write(b'Hello world!')
        'В этом режиме писать только Байт-строки или Байт-масивы'
        'Щоб працювати з послідовністю байтів у Python є вбудовані типи даних байт-рядків'
        bytes - 'незмінний тип, що використовують для представлення байтів'
        bytearray - 'змінний тип, що дозволяє модифікувати байти після їх створення'

        s = 'Hello world!'.encode(encoding='Тут метод кодировки',errors='Как обробляем ошибки') ,'-> Str -> Bytes | Изменяем строку на строку Bytes'
        '''encoding - вказує метод кодування. По замовчуванню використовується 'utf-8',\
            який підтримує велику кількість символів з різних мов.
            errors - вказує, як обробляти помилки кодування. Наприклад, 'strict' для викидання виключення у випадку помилки,\
            'ignore' для ігнорування помилок або 'replace' для заміни неможливих для кодування символів на певний замінник (?)'''
    
        


def parametrs_file():
    '''Параметри:
file - шлях до файлу у вигляді рядка. Це може бути повний шлях або шлях відносно поточного каталогу виконання.
mode (необов'язковий) - режим, в якому буде відкрито файл. Ось основні режими які ми будемо використовувати:
'r' - читання (за замовчуванням). Файл має існувати.
'w' - запис. Створює новий файл або перезаписує, що вже існує.
'a' - додавання. Дописує в кінець файлу, не перезаписуючи його.
'b' - бінарний режим (може бути використаний разом з іншими, наприклад 'rb' або 'wb').
'+' - оновлення (читання та запис).
buffering (необов'язковий) - визначає буферизацію: 0 для вимкненої, 1 для включеної буферизації рядків, більше 1 для вказання розміру буфера у байтах.
encoding (необов'язковий) - ім'я кодування, яке буде використовуватися для кодування або декодування файлу.
errors (необов'язковий) - вказує, як обробляти помилки кодування.
newline (необов'язковий) - контролює, як обробляються нові рядки.
closefd (необов'язковий) - має бути True (за замовчуванням); якщо вказано False, файловий дескриптор не буде закритий.
opener (необов'язковий) - визначає спеціальну функцію для відкриття файлу.'''
